# Installl PHP Unit Testing
composer require --dev phpunit/phpunit

# Alias
alias phpunit="./vendor/phpunit/phpunit/phpunit"

# How does it work?
* All class name needs to have the word "Test" at the end, for example: class UserTest
* Every class needs to be extended to \PHPUnit\Framework\TestCase
* All methods inside the test class need to have as a prefix the word "test" like "public function testFunctionExample()"
* Also insted of writing the prefix "test" in methods name, you can write in description method the following:
  /**
  * @test
  */
  public function functionExample()
* In order to check the test for equal value, you can use assertEquals(expectedValue, method($x, $y)

# Options
Command in order to filter the method and run the test
* phpunit  <directory> --filter=<name_function>
Command in order to add color to the test result
* phpunit <directory> --color
More information or guide about phpunit commands
* phpunit -h
More detail in test result
* phpunit --verbose=true
If there any change has been made in composer.json file, you  need to run the command:
* composer dump-autoload
For the autoload class use the following command:
* phpunit --bootstrap="vendor/autoload.php"

Metodos ya definidos en un Test class:
setUp(): Siempre se ejecuta antes de que cada funcion  de la test class sea ejecutada.
tearDown(): Siempre se ejecuta despues de que la funcion de la test class se haya ejecutado.
setUpBeforeClass(): Se ejecuta antes de que la test class sea ejecutada.
tearDownAfterClass(): Se ejecuta despeus de que la test class se ha ejecutado.

*expectException y expectExceptionMessage("mensaje....") son ejecutadas siempre y cuando se este esperando un error.
