Instalar Laravel en Composer:
composer create-project --prefer-dist laravel/laravel <project_name> <versio>

Ver comandos:
php artisan 

Ejecutar proyecto:
php artisan serve

Instalar laravel ui:
composer require laravel/ui <version>

Ejemplo UI:
php artisan ui -h
php artisan ui vue --auth
Instalar npm install
ejecutar npm run dev
ejecuta cambios en tiempo real: npm run watch

Limpiar Cache
php artisan config:cache

Migraciones:
php artisan migrate
php artisan make:migration <nombre de la migracion>
php artisan migrate:rollback

Model:
mayor informacion: php artisan make:model -h
php artisan make:model -a (crea archivos para migracion, controlador, modelo, seeder)

Controller:
php artisan route:list --name={nombre}
php artisan make:controller <nombre> -r --model=<modelo> 

Seeder:
php artisan db:seed -->ejecuta los seeds
php artisan migrate:fresh --seed -->borra todos los datos creados por seeds y los ejecuta nuevamente
php artisan make:seeder <Name> --> crea nuevo seed
php artisan db:seed --class {nombre de la clase} -->ejecuta un seed especifico

404 Error:
php artisan vendor:publish --tag=laravel-errors

To production:
After change the variable APP_ENV to "production" in .env file, use this comnand
php artisan migrate:fresh

Middleware:
php artisan make:middleware <nombre>

Policy:
php artisan make:policy <nombre> --model= {nombre de la clase modelo}

visual components:
composer require laravel/ui
Vagrant:
composer require laraverl/homestead
Create configuration file for homestead:
php vendor/bin/homestead make
EN homestead.yaml el ip debe ser considerado en el /etc/hosts  y apuntar con la 
direccion sites.map
comandos vagrant:
- vagrant up -> levantar servicio
- vagrant destroy -> elimina la maquina virtual
- vagrant halt -> pausa maquina virtual
- vagrant ssh -> trabajar dentro la maquina virtual


compsoer require guzzlehttp/guzzle --> requests and trivial to integrate with web services.
composer require spatie/laravel-fractal

php artisan make:transformer <name>

composer require laravel/passport
php artisan passport:install  --> preparar Passport para su uso
php artisan passport:client --> crear cliente para los tokens
php artisan passport:client --passport
